#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeSan.HlxPortal.Common
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HlxPortal")]
	public partial class PlcDbRecordDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPlcDbRecord(PlcDbRecord instance);
    partial void UpdatePlcDbRecord(PlcDbRecord instance);
    partial void DeletePlcDbRecord(PlcDbRecord instance);
    #endregion
		
		public PlcDbRecordDataContext() : 
				base(global::LeSan.HlxPortal.Common.Properties.Settings.Default.HlxPortalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PlcDbRecordDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlcDbRecordDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlcDbRecordDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PlcDbRecordDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PlcDbRecord> PlcDbRecords
		{
			get
			{
				return this.GetTable<PlcDbRecord>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlcData")]
	public partial class PlcDbRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _SiteId;
		
		private System.DateTime _TimeStamp;
		
		private string _KeyValueData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIdChanging(byte value);
    partial void OnSiteIdChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    partial void OnKeyValueDataChanging(string value);
    partial void OnKeyValueDataChanged();
    #endregion
		
		public PlcDbRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyValueData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string KeyValueData
		{
			get
			{
				return this._KeyValueData;
			}
			set
			{
				if ((this._KeyValueData != value))
				{
					this.OnKeyValueDataChanging(value);
					this.SendPropertyChanging();
					this._KeyValueData = value;
					this.SendPropertyChanged("KeyValueData");
					this.OnKeyValueDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
